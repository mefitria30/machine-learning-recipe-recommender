

    import pandas as pd
    import numpy as np
    import random
    from sklearn.feature_extraction.text import TfidfVectorizer
    from sklearn.naive_bayes import MultinomialNB
    from sklearn.cluster import KMeans
    import matplotlib.pyplot as plt

    # Load dataset
    data = pd.read_csv('dataset.csv')

    # Rename columns
    data.rename(columns={'Unnamed: 0': 'id', 'Title': 'name', 'Ingredients': 'ingredients',
                         'Instructions': 'steps', 'Image_Name': 'image'}, inplace=True)

    # Pilih kolom yang relevan
    new_data = data[['id', 'name', 'ingredients', 'steps', 'image']]

    # **Tambahkan kolom rating dengan nilai random antara 1-5**
    new_data['rating'] = np.random.randint(1, 6, size=len(new_data))  # Random rating dari 1 sampai 5

    # **Tetapkan cluster berdasarkan nilai rating**
    new_data['cluster'] = np.where(new_data['rating'] <= 3, 0, 1)  # 0 jika rating <= 3, 1 jika rating >= 4
    new_data['cluster_label'] = new_data['cluster'].map({0: 'biasa saja', 1: 'favorit'})

    # **Gunakan TF-IDF lebih optimal**
    tfidf = TfidfVectorizer(stop_words='english', max_features=20000, ngram_range=(1, 3))
    X_ingredients = tfidf.fit_transform(new_data['ingredients'].values.astype('U'))

    # **Optimasi jumlah cluster menggunakan Elbow Method**
    wcss = []
    for i in range(5, 15):  # Uji cluster dari 5 hingga 15
        kmeans = KMeans(n_clusters=i, random_state=42)
        kmeans.fit(X_ingredients)
        wcss.append(kmeans.inertia_)

    # Plot Elbow Method
    plt.plot(range(5, 15), wcss, marker='o')
    plt.xlabel("Jumlah Cluster")
    plt.ylabel("WCSS")
    plt.title("Elbow Method - Optimal Cluster")
    plt.show()

[]

    # **Gunakan K-Means dengan cluster lebih optimal**
    optimal_clusters = 10
    kmeans = KMeans(n_clusters=optimal_clusters, random_state=42)
    new_data['category_num'] = kmeans.fit_predict(X_ingredients)

    # **Pemetaan kategori lebih rinci berdasarkan ingredients**
    def categorize_food(ingredients):
        ingredients = ingredients.lower()
        
        # üçñ Daging & Protein Hewani
        if any(item in ingredients for item in ['beef', 'lamb', 'pork', 'chicken', 'turkey', 'duck', 'bacon', 'sausage']):
            return "Meat-Based"
        elif any(item in ingredients for item in ['fish', 'shrimp', 'salmon', 'tuna', 'crab', 'mussels']):
            return "Seafood"
        
        # ü•¶ Sayuran & Tanaman
        elif any(item in ingredients for item in ['spinach', 'kale', 'lettuce', 'broccoli', 'carrot', 'potato', 'tomato', 'cucumber', 'mushroom']):
            return "Vegetarian"

        # üçö Sumber Karbohidrat
        elif any(item in ingredients for item in ['rice', 'oats', 'quinoa', 'barley', 'flour', 'bread', 'pasta', 'tortilla', 'sweet potato']):
            return "Bakery"

        # üç∂ Produk Susu & Alternatifnya
        elif any(item in ingredients for item in ['milk', 'cheese', 'butter', 'yogurt', 'almond milk', 'soy milk']):
            return "Dairy-Based"

        # üçØ Pemanis & Perasa
        elif any(item in ingredients for item in ['sugar', 'honey', 'maple syrup', 'stevia', 'salt', 'pepper', 'garlic', 'cinnamon', 'basil', 'oregano']):
            return "Seasoning & Sweetener"

        # üç© Dessert & Bahan Kue
        elif any(item in ingredients for item in ['chocolate', 'cocoa', 'vanilla', 'eggs', 'baking powder']):
            return "Dessert"
        
        else:
            return "Other"

    new_data['category'] = new_data['ingredients'].apply(categorize_food)

    # **Gunakan Na√Øve Bayes dengan smoothing alpha lebih tinggi**
    model_category = MultinomialNB(alpha=0.5)
    model_category.fit(X_ingredients, new_data['category_num'])

    MultinomialNB(alpha=0.5)

    # **Gunakan TF-IDF lebih kuat untuk rekomendasi nama**
    cv = TfidfVectorizer(max_features=20000, stop_words='english', ngram_range=(1, 3))
    X_name = cv.fit_transform(new_data['name'].values.astype('U'))

    model_recommendation = MultinomialNB(alpha=0.5)
    y = np.arange(len(new_data))
    model_recommendation.fit(X_name, y)

    MultinomialNB(alpha=0.5)

    # **Fungsi pencarian kategori dengan hasil acak**
    def search_by_category(category_name, N=5):
        matching_items = new_data[new_data['category'] == category_name]
        print(f"Makanan acak dalam kategori '{category_name}':")
        print(matching_items.sample(frac=1).head(N)[['id', 'name', 'ingredients', 'category', 'rating', 'cluster_label']])


    # **Fungsi pencarian berdasarkan cluster dengan hasil acak**
    def search_by_cluster(cluster_label, N=5):
        matching_items = new_data[new_data['cluster_label'] == cluster_label]
        print(f"Makanan acak dalam cluster '{cluster_label}':")
        print(matching_items.sample(frac=1).head(N)[['id', 'name', 'ingredients', 'category', 'rating', 'cluster_label']])

    # **Fungsi rekomendasi berdasarkan nama makanan**
    def recommend_nb(name):
        query_vec = cv.transform([name.lower()])
        predicted_probs = model_recommendation.predict_proba(query_vec)[0]
        top_5_indices = np.argsort(predicted_probs)[-5:][::-1]

        recommended_items = new_data.iloc[top_5_indices].copy()
        recommended_items['predicted_category'] = recommended_items['ingredients'].apply(categorize_food)

        print("Rekomendasi untuk:", name)
        print(recommended_items[['id', 'name', 'ingredients', 'category', 'predicted_category', 'rating', 'cluster_label']])

    # **Tes pencarian berdasarkan kategori (acak)**
    search_by_category("Dairy-Based")

    Makanan acak dalam kategori 'Dairy-Based':
              id                  name  \
    12754  12754  Browned Onion Kugels   
    11885  11885      Chocolate Fondue   
    4040    4040  Buffalo Wing Popcorn   
    12678  12678       Vanilla Custard   
    8727    8727        Yogurt Granita   

                                                 ingredients     category  rating  \
    12754  ['6 ounces medium egg noodles (1 3/4 cups)', '...  Dairy-Based       2   
    11885  ['1 pint fresh strawberries', '1 red apple, co...  Dairy-Based       1   
    4040   ['Nonstick vegetable oil spray', '8 cups poppe...  Dairy-Based       2   
    12678  ['3 cups whole milk', '8 large egg yolks', '2/...  Dairy-Based       4   
    8727   ['1 10-ounce package frozen strawberries, thaw...  Dairy-Based       2   

          cluster_label  
    12754    biasa saja  
    11885    biasa saja  
    4040     biasa saja  
    12678       favorit  
    8727     biasa saja  

    # **Tes pencarian berdasarkan cluster (acak)**
    search_by_cluster("biasa saja")

    Makanan acak dalam cluster 'biasa saja':
              id                            name  \
    9310    9310  Chipotle Chicken Tortilla Soup   
    4645    4645         Simplest Asian Dressing   
    6172    6172                White Bean Salad   
    10858  10858                Lemon Cream Tart   
    3962    3962        Crispy Potato-Leek Kugel   

                                                 ingredients  \
    9310   ['3 carrots, coarsely chopped', '3 celery ribs...   
    4645   ['1/2 small garlic clove, finely grated', '1 t...   
    6172   ['1 cup dried small white beans, such as canne...   
    10858  ['1 cup unbleached all purpose flour', '1/4 cu...   
    3962   ['9 medium russet potatoes (about 4 1/2 pounds...   

                        category  rating cluster_label  
    9310              Meat-Based       1    biasa saja  
    4645                  Bakery       3    biasa saja  
    6172   Seasoning & Sweetener       3    biasa saja  
    10858                 Bakery       3    biasa saja  
    3962              Vegetarian       2    biasa saja  

    # **Tes pencarian berdasarkan nama makanan**
    target_item = "BURGER"
    recommend_nb(target_item)

    Rekomendasi untuk: BURGER
            id                       name  \
    5509  5509  The Burger Lover's Burger   
    9656  9656              Aussie Burger   
    7020  7020              Pete's Burger   
    3790  3790            Insanity Burger   
    6956  6956        The Trifecta Burger   

                                                ingredients    category  \
    5509  ['1 1/2 pounds well-marbled beef chuck top bla...  Meat-Based   
    9656  ['1/4 cup ketchup', '1/4 cup mayonnaise', '1 t...  Meat-Based   
    7020  ['4 slices aged Cheddar cheese', '1 onion, cut...  Meat-Based   
    3790  ['1 3/4 lbs ground chuck steak', 'Olive oil', ...  Meat-Based   
    6956  ['1 cup (96 g) TVP granules', '1 cup (235 ml) ...      Bakery   

         predicted_category  rating cluster_label  
    5509         Meat-Based       5       favorit  
    9656         Meat-Based       4       favorit  
    7020         Meat-Based       5       favorit  
    3790         Meat-Based       3    biasa saja  
    6956             Bakery       4       favorit  

    accuracy_category = model_category.score(X_ingredients, new_data['category_num'])
    print(f"Akurasi Model Kategori Na√Øve Bayes: {accuracy_category:.2%}")

    Akurasi Model Kategori Na√Øve Bayes: 90.29%

    accuracy_recommendation = model_recommendation.score(X_name, y)
    print(f"Akurasi Model Rekomendasi Nama: {accuracy_recommendation:.2%}")

    Akurasi Model Rekomendasi Nama: 96.77%

    print(new_data['category'].value_counts())

    category
    Meat-Based               3382
    Bakery                   2811
    Vegetarian               2399
    Seasoning & Sweetener    1921
    Dairy-Based              1595
    Seafood                   843
    Other                     481
    Dessert                    69
    Name: count, dtype: int64

    recommend_nb("Pizza")
    recommend_nb("Cake")
    recommend_nb("Smoothie")
    recommend_nb("Burger")

    Rekomendasi untuk: Pizza
              id                    name  \
    6245    6245        Gardener's Pizza   
    1420    1420             Salad Pizza   
    13023  13023           Apple "Pizza"   
    8504    8504      "Pizza" Sandwiches   
    5667    5667  Veggi-Prosciutto Pizza   

                                                 ingredients    category  \
    6245   ['Generous pinch of sugar', '1 1/4 cups/300 ml...  Vegetarian   
    1420   ['1 pound store-bought pizza dough,room temper...  Vegetarian   
    13023  ['1 frozen puff pastry sheet (from a 17 1/4-oz...      Bakery   
    8504   ['4 tablespoons extra-virgin olive oil plus ad...  Vegetarian   
    5667   ['1 package (16 ounces) frozen whole-wheat piz...  Vegetarian   

          predicted_category  rating cluster_label  
    6245          Vegetarian       1    biasa saja  
    1420          Vegetarian       1    biasa saja  
    13023             Bakery       1    biasa saja  
    8504          Vegetarian       5       favorit  
    5667          Vegetarian       3    biasa saja  
    Rekomendasi untuk: Cake
            id               name  \
    6022  6022    The Tomboy Cake   
    5901  5901       1-2-3-4 cake   
    4323  4323         Opera Cake   
    3483  3483           Pan Cake   
    951    951  Ricotta Filo Cake   

                                                ingredients category  \
    6022  ['1 cup (2 sticks) unsalted butter, room tempe...   Bakery   
    5901  ['Softened butter and flour, for the pans', 'N...   Bakery   
    4323  ['3 tablespoons cake flour (not self-rising), ...   Bakery   
    3483  ['1 1/2 cups all-purpose flour', '1 cup sugar'...   Bakery   
    951   ['90g butter', '200g fillo pastry sheets', '50...   Bakery   

         predicted_category  rating cluster_label  
    6022             Bakery       1    biasa saja  
    5901             Bakery       4       favorit  
    4323             Bakery       1    biasa saja  
    3483             Bakery       3    biasa saja  
    951              Bakery       1    biasa saja  
    Rekomendasi untuk: Smoothie
              id                               name  \
    706      706                Strawberry Smoothie   
    6978    6978                     Fruit Smoothie   
    796      796           Ginger + Greens Smoothie   
    4141    4141              The Greenest Smoothie   
    13095  13095  Orange and Banana Yogurt Smoothie   

                                                 ingredients     category  \
    706    ['1 (10-oz.) bag frozen strawberries', '1 1/4 ...  Dairy-Based   
    6978   ['2 peaches, peeled, halved, pitted', '1 grape...  Dairy-Based   
    796    ['Organic Spinach', 'Organic Banana', 'Avocado...   Vegetarian   
    4141   ['1 banana, frozen, cut into 1" pieces', '1 cu...   Vegetarian   
    13095  ['1 large banana, peeled, sliced, frozen', '1 ...  Dairy-Based   

          predicted_category  rating cluster_label  
    706          Dairy-Based       3    biasa saja  
    6978         Dairy-Based       4       favorit  
    796           Vegetarian       1    biasa saja  
    4141          Vegetarian       5       favorit  
    13095        Dairy-Based       4       favorit  
    Rekomendasi untuk: Burger
            id                       name  \
    5509  5509  The Burger Lover's Burger   
    9656  9656              Aussie Burger   
    7020  7020              Pete's Burger   
    3790  3790            Insanity Burger   
    6956  6956        The Trifecta Burger   

                                                ingredients    category  \
    5509  ['1 1/2 pounds well-marbled beef chuck top bla...  Meat-Based   
    9656  ['1/4 cup ketchup', '1/4 cup mayonnaise', '1 t...  Meat-Based   
    7020  ['4 slices aged Cheddar cheese', '1 onion, cut...  Meat-Based   
    3790  ['1 3/4 lbs ground chuck steak', 'Olive oil', ...  Meat-Based   
    6956  ['1 cup (96 g) TVP granules', '1 cup (235 ml) ...      Bakery   

         predicted_category  rating cluster_label  
    5509         Meat-Based       5       favorit  
    9656         Meat-Based       4       favorit  
    7020         Meat-Based       5       favorit  
    3790         Meat-Based       3    biasa saja  
    6956             Bakery       4       favorit  

    print(new_data[['rating', 'cluster_label']].sample(20))

           rating cluster_label
    3133        1    biasa saja
    8187        4       favorit
    12305       2    biasa saja
    9163        3    biasa saja
    11913       4       favorit
    9301        4       favorit
    8171        2    biasa saja
    6903        4       favorit
    1414        2    biasa saja
    460         1    biasa saja
    12219       2    biasa saja
    12778       5       favorit
    2270        3    biasa saja
    2835        2    biasa saja
    8209        2    biasa saja
    90          2    biasa saja
    3625        1    biasa saja
    4686        3    biasa saja
    5409        5       favorit
    5898        1    biasa saja
